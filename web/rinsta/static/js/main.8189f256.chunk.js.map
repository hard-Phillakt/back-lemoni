{"version":3,"sources":["components/UI/Loader/img/instagram-loader.svg","serviceWorker.js","components/Header/Content/Content.js","components/Header/EdgeCounters/EdgeCounters.js","components/Header/Logo/Logo.js","components/Header/UserName/UserName.js","components/Header/Header.js","components/Item/Item.js","components/ListItem/ListItem.js","components/UI/ButtonInc.js","components/UI/Loader/Loader.js","components/App.js","actions/index.js","reducers/increment.js","reducers/account.js","reducers/rootReducers.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","content","props","className","full_name","dangerouslySetInnerHTML","__html","biography","edgeCounters","edgecounters","owner_to_timeline_media","followed_by","follow","logo","href","accountname","src","profile","alt","userName","username","header","user","edge_owner_to_timeline_media","edge_followed_by","edge_follow","external_url","profile_pic_url_hd","item","displayUrl","backgroundImage","display_url","style","listItem","posts","edges","removed","splice","increment","map","i","key","node","buttonInc","onClick","addItem","goInstagram","loader","logoInst","App","accountName","this","url","fetch","then","res","json","dataApi","app","account","count","React","Component","connect","state","dispatch","number","type","data","graphql","initState","action","ininState","combine","combineReducers","store","createStore","rootReducer","applyMiddleware","next","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8189f256.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instagram-loader.5dc8e118.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport './Content.scss';\r\n\r\nconst content = props => {\r\n\r\n    return (\r\n        <div className=\"r__mt-30\">\r\n            <div className=\"r__mt-10\">\r\n                <h3 className=\"rinsta-full-name\">{props.content.full_name}</h3>\r\n            </div>\r\n            <div className=\"r__mt-20\">\r\n                <div className=\"rinsta-biography\">\r\n                    <div dangerouslySetInnerHTML={{ __html: props.content.biography }}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default content;","import React from 'react';\r\nimport './EdgeCounters.scss';\r\n\r\nconst edgeCounters = props => (\r\n    <ul className=\"rinsta-edgecounters r__mt-30\">\r\n        <li>\r\n            <div className=\"rinsta-edgecounters__item r__mr-40\">\r\n                <span className=\"rinsta-edgecounters__item_count\">{props.edgecounters.owner_to_timeline_media}</span>\r\n                <div className=\"r__ml-5\">Публикаций</div>\r\n            </div>\r\n        </li>\r\n        <li>\r\n            <div className=\"rinsta-edgecounters__item r__mr-40\">\r\n                <span className=\"rinsta-edgecounters__item_count\">{props.edgecounters.followed_by}</span>\r\n                <div className=\"r__ml-5\">подписчиков</div>\r\n            </div>\r\n        </li>\r\n        <li>\r\n            <div className=\"rinsta-edgecounters__item r__mr-40\">\r\n                <span className=\"rinsta-edgecounters__item_count\">{props.edgecounters.follow}</span>\r\n                <div className=\"r__ml-5\">подписок</div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n);\r\n\r\nexport default edgeCounters;","import React from 'react';\r\nimport './Logo.scss';\r\n\r\nconst logo = props => (\r\n    <div className=\"rinsta-logo r__mr-60 r__ml-60 r__mb-60\">\r\n        <a href={`https://www.instagram.com/${props.accountname}/`}>\r\n            <img src={props.profile} alt=\"rinsta-logo\" />\r\n        </a>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport './UserName.scss';\r\n\r\nconst userName = props => (\r\n    <div className=\"rinsta-header__box\"><h2 className=\"rinsta-username\">{props.username}</h2></div>\r\n);\r\n\r\nexport default userName;","import React from 'react';\r\nimport './Header.scss';\r\nimport Content from './Content/Content';\r\nimport EdgeCounters from './EdgeCounters/EdgeCounters';\r\nimport Logo from './Logo/Logo';\r\nimport UserName from './UserName/UserName';\r\n\r\nconst header = (props) => {\r\n\r\n    const edgeCounters = {\r\n        owner_to_timeline_media: props.user.edge_owner_to_timeline_media,\r\n        followed_by: props.user.edge_followed_by,\r\n        follow: props.user.edge_follow,\r\n    }\r\n\r\n    const content = {\r\n        full_name: props.user.full_name,\r\n        biography: props.user.biography,\r\n        external_url: props.user.external_url\r\n    }\r\n\r\n    return (\r\n        <header className=\"rinsta-header\">\r\n        \r\n            <Logo profile={props.user.profile_pic_url_hd} accountname={props.accountname}/>\r\n\r\n            <article className=\"rinsta-article r__mr-60\">\r\n\r\n                <UserName username={props.user.username} />\r\n\r\n                <EdgeCounters edgecounters={edgeCounters} />\r\n\r\n                <Content content={content} />\r\n\r\n            </article>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default header;","import React from 'react';\r\nimport './Item.scss';\r\n\r\nconst item = (props) => {\r\n    \r\n    const displayUrl = {\r\n        backgroundImage: `url(${props.item.display_url})`\r\n    };\r\n\r\n    return (\r\n        <li className=\"r__mt-10 r__mr-10 r__mb-10 r__ml-10\">\r\n            <div className=\"rinsta-box-post\">\r\n                <div className=\"rinsta-display_url\" style={displayUrl}></div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default item;","import React from 'react';\r\nimport './ListItem.scss';\r\nimport Item from '../Item/Item';\r\n\r\nconst listItem = (props) => {\r\n\r\n    const posts = props.posts.edges ? props.posts.edges : [];\r\n\r\n    let removed = [...posts].splice(0, props.increment);\r\n    \r\n    return (\r\n        <section className=\"rinsta-content\">\r\n            <ul className=\"rinsta-wrapper__posts r__mt-30\">\r\n                {\r\n                    removed.map((item, i) => {\r\n\r\n                        return (\r\n                            <Item key={i} item={item.node} />\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default listItem;","import React from 'react';\r\nimport './ButtonInc.scss';\r\n\r\nconst buttonInc = props => {\r\n\r\n    function goInstagram(props) {\r\n\r\n        if (props.increment < 12) {\r\n            return(<button className=\"rinsta-button__inc\" onClick={() => (props.addItem(6))}>Загрузить еще</button>)\r\n        } else {\r\n            return (<a href={`https://www.instagram.com/${props.accountname}`} className=\"rinsta-button__inc r__pt-10 r__pr-30 r__pb-10 r__pl-30\">Перейти в инстаграм?</a>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"rinsta-wrapper-buton\">\r\n            {goInstagram(props)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buttonInc;","import React from 'react';\r\nimport './Loader.scss';\r\nimport logoInst from './img/instagram-loader.svg';\r\n\r\nconst loader = () => <div className=\"rinsta-loader-box\"><img src= {logoInst} alt=\"loader\"/></div>\r\n\r\nexport default loader;","import React from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport './UI/MP/MP.scss';\n\nimport Header from './Header/Header';\nimport ListItem from './ListItem/ListItem';\nimport ButtonInc from './UI/ButtonInc';\nimport Loader from './UI/Loader/Loader';\nimport { addItem, dataApi } from './../actions/index';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n\n    const accountName = this.props.url;\n\n    fetch(`https://www.instagram.com/${accountName}/?__a=1`)\n      .then(res => (res.json()))\n      .then(res => (this.props.dataApi(res)))\n  }\n\n  render() {\n    const app = <div className=\"App\">\n      {/* user = данные аккаунта, accountname из точки приложения \"index.js\" для сслыки логотипа */}\n      <Header user={this.props.account.user} accountname={this.props.url} />\n      {/*  posts = посты из аккаунта,  increment = в экшене инкремент для количества отображаемых постов*/}\n      <ListItem posts={this.props.account.posts} increment={this.props.increment.count} />\n      {/* метод кнопки для инкремента */}\n      <ButtonInc addItem={this.props.addItem} increment={this.props.increment.count} accountname={this.props.url} />\n    </div>\n\n    const loader = <div className=\"App\">\n      <Loader />\n    </div>\n\n    return (\n      this.props.account.user.username ? app : loader\n    )\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ...state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addItem: (number) => {\n      dispatch(addItem(number));\n    },\n    dataApi: (data) => {\n      dispatch(dataApi(data));\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n","\r\nexport const addItem = (count) => {\r\n    return {\r\n        type: 'ADD_ITEM',\r\n        count\r\n    }\r\n}\r\n\r\nexport const dataApi = (data) => {\r\n        \r\n    const user = {\r\n        profile_pic_url_hd: data.graphql.user.profile_pic_url_hd,\r\n        username: data.graphql.user.username,\r\n        external_url: data.graphql.user.external_url,\r\n        full_name: data.graphql.user.full_name,\r\n        biography: data.graphql.user.biography,\r\n        \r\n        // Колличество публикации\r\n        edge_owner_to_timeline_media: data.graphql.user.edge_owner_to_timeline_media.count,\r\n\r\n        // Подписчиков\r\n        edge_followed_by: data.graphql.user.edge_followed_by.count,\r\n\r\n        // подписок\r\n        edge_follow: data.graphql.user.edge_follow.count,  \r\n    };\r\n\r\n    const posts = {\r\n        // Публикации\r\n        edges: data.graphql.user.edge_owner_to_timeline_media.edges\r\n    };\r\n\r\n    return {\r\n        type: 'DATA_API',\r\n        user,\r\n        posts\r\n    }\r\n}\r\n","\r\nconst initState = {\r\n    count: 6\r\n}\r\n\r\nconst increment = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_ITEM\":\r\n\r\n            return {\r\n                ...state,\r\n                count: state.count < 12 ? state.count + action.count : state.count\r\n            }\r\n\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default increment;"," \r\nconst ininState = {\r\n    user: {},\r\n    posts: {},\r\n}\r\n\r\nconst account = (state = ininState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case 'DATA_API':\r\n        \r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                posts: action.posts \r\n            }\r\n    \r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n\r\n}\r\n\r\nexport default account;","import { combineReducers } from 'redux';\r\nimport increment from './increment';\r\nimport account from './account';\r\n\r\nconst combine = combineReducers({\r\n    increment,\r\n    account\r\n});\r\n\r\nexport default combine;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducers';\n\nconst logger = store => next => action => {\n    return next(action);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n\nconst app = (\n    <Provider store={store}>\n        <App \n            url={'bakery_lemoni'}\n        />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('rinsta'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}