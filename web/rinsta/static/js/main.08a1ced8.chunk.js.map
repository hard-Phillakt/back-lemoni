{"version":3,"sources":["components/Item/img/heart.svg","components/Item/img/comment.svg","components/UI/Loader/img/instagram-loader.svg","serviceWorker.js","components/Header/Content/Content.js","components/Header/EdgeCounters/EdgeCounters.js","components/Header/Logo/Logo.js","components/Header/UserName/UserName.js","components/Header/Header.js","components/Item/Item.js","components/ListItem/ListItem.js","components/UI/ButtonInc.js","components/UI/Loader/Loader.js","components/App.js","actions/index.js","reducers/increment.js","reducers/account.js","reducers/rootReducers.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","content","props","className","full_name","dangerouslySetInnerHTML","__html","biography","href","external_url","args","externalCount","split","splice","parseInt","length","join","httpString","edgeCounters","edgecounters","owner_to_timeline_media","followed_by","follow","logo","accountname","src","profile","alt","userName","username","header","user","edge_owner_to_timeline_media","edge_followed_by","edge_follow","profile_pic_url_hd","item","displayUrl","backgroundImage","display_url","style","heart","edge_liked_by","count","comment","edge_media_to_comment","listItem","posts","edges","removed","increment","map","i","key","node","buttonInc","onClick","addItem","goInstagram","loader","logoInst","App","accountName","this","url","fetch","then","res","json","dataApi","app","account","React","Component","connect","state","dispatch","number","type","data","graphql","initState","action","ininState","combine","combineReducers","store","createStore","rootReducer","applyMiddleware","next","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.08a1ced8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.0ab9ab94.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment.e7c0a746.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram-loader.5dc8e118.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport './Content.scss';\r\n\r\nconst content = props => {\r\n\r\n    const httpString = args => {\r\n        if (args) {\r\n            const externalCount = args.split('');\r\n            let externalUrl = externalCount.splice(7, parseInt(externalCount.length) - 7);\r\n            return externalUrl.join('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"r__mt-10\">\r\n            <div className=\"r__mt-10\">\r\n                <h3 className=\"rinsta-full-name\">{props.content.full_name}</h3>\r\n            </div>\r\n            <div className=\"r__mt-10\">\r\n                <div className=\"rinsta-biography\">\r\n                    <div dangerouslySetInnerHTML={{ __html: props.content.biography }}></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"r__mt-10\">\r\n                <a className=\"rinsta-external-url__a\" href={props.content.external_url}>{httpString(props.content.external_url)}</a>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default content;","import React from 'react';\r\nimport './EdgeCounters.scss';\r\n\r\nconst edgeCounters = props => (\r\n    <ul className=\"rinsta-edgecounters r__mt-30\">\r\n        <li>\r\n            <div className=\"rinsta-edgecounters__item r__mr-40\">\r\n                <span className=\"rinsta-edgecounters__item_count\">{props.edgecounters.owner_to_timeline_media}</span>\r\n                <div className=\"r__ml-5\">Публикаций</div>\r\n            </div>\r\n        </li>\r\n        <li>\r\n            <div className=\"rinsta-edgecounters__item r__mr-40\">\r\n                <span className=\"rinsta-edgecounters__item_count\">{props.edgecounters.followed_by}</span>\r\n                <div className=\"r__ml-5\">подписчиков</div>\r\n            </div>\r\n        </li>\r\n        <li>\r\n            <div className=\"rinsta-edgecounters__item r__mr-40\">\r\n                <span className=\"rinsta-edgecounters__item_count\">{props.edgecounters.follow}</span>\r\n                <div className=\"r__ml-5\">подписок</div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n);\r\n\r\nexport default edgeCounters;","import React from 'react';\r\nimport './Logo.scss';\r\n\r\nconst logo = props => (\r\n    <div className=\"rinsta-logo r__mr-60 r__ml-60 r__mb-60\">\r\n        <a href={`https://www.instagram.com/${props.accountname}/`}>\r\n            <img src={props.profile} alt=\"rinsta-logo\" />\r\n        </a>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport './UserName.scss';\r\n\r\nconst userName = props => (\r\n    <div className=\"rinsta-header__box\"><h2 className=\"rinsta-username\">{props.username}</h2></div>\r\n);\r\n\r\nexport default userName;","import React from 'react';\r\nimport './Header.scss';\r\nimport Content from './Content/Content';\r\nimport EdgeCounters from './EdgeCounters/EdgeCounters';\r\nimport Logo from './Logo/Logo';\r\nimport UserName from './UserName/UserName';\r\n\r\nconst header = (props) => {\r\n\r\n    const edgeCounters = {\r\n        owner_to_timeline_media: props.user.edge_owner_to_timeline_media,\r\n        followed_by: props.user.edge_followed_by,\r\n        follow: props.user.edge_follow,\r\n    }\r\n\r\n    const content = {\r\n        full_name: props.user.full_name,\r\n        biography: props.user.biography,\r\n        external_url: props.user.external_url\r\n    }\r\n\r\n    return (\r\n        <header className=\"rinsta-header\">\r\n        \r\n            <Logo profile={props.user.profile_pic_url_hd} accountname={props.accountname}/>\r\n\r\n            <article className=\"rinsta-article r__mr-60\">\r\n\r\n                <UserName username={props.user.username} />\r\n\r\n                <EdgeCounters edgecounters={edgeCounters} />\r\n\r\n                <Content content={content} />\r\n\r\n            </article>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default header;","import React from 'react';\r\nimport './Item.scss';\r\nimport heart from './img/heart.svg'\r\nimport comment from './img/comment.svg';\r\n\r\nconst item = (props) => {\r\n    \r\n    const displayUrl = {\r\n        backgroundImage: `url(${props.item.display_url})`\r\n    };\r\n\r\n    return (\r\n        <li className=\"r__mt-10 r__mr-10 r__mb-10 r__ml-10\">\r\n            <div className=\"rinsta-box-post\">\r\n                <div className=\"rinsta-display_url\" style={displayUrl}></div>\r\n                <div className=\"rinsta-shadow-box\">\r\n                    <div className=\"rinsta-shadow-box__icon r__mt-10 r__mr-10 r__mb-10 r__ml-10\">\r\n                        <img src={heart} alt=\"heart\" />\r\n                        <span className=\"r__ml-10\">{props.item.edge_liked_by.count}</span>\r\n                    </div>\r\n                    <div className=\"rinsta-shadow-box__icon r__mt-10 r__mr-10 r__mb-10 r__ml-10\">\r\n                        <img src={comment} alt=\"comment\" />\r\n                        <span className=\"r__mt-5 r__mr-5 r__mb-5 r__ml-5\">{props.item.edge_media_to_comment.count}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default item;","import React from 'react';\r\nimport './ListItem.scss';\r\nimport Item from '../Item/Item';\r\n\r\nconst listItem = (props) => {\r\n\r\n    const posts = props.posts.edges ? props.posts.edges : [];\r\n\r\n    let removed = [...posts].splice(0, props.increment);\r\n    \r\n    return (\r\n        <section className=\"rinsta-content\">\r\n            <ul className=\"rinsta-wrapper__posts r__mt-30\">\r\n                {\r\n                    removed.map((item, i) => {\r\n\r\n                        return (\r\n                            <Item key={i} item={item.node} />\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default listItem;","import React from 'react';\r\nimport './ButtonInc.scss';\r\n\r\nconst buttonInc = props => {\r\n\r\n    function goInstagram(props) {\r\n\r\n        if (props.increment < 12) {\r\n            return(<button className=\"rinsta-button__inc\" onClick={() => (props.addItem(6))}>Загрузить еще</button>)\r\n        } else {\r\n            return (<a href={`https://www.instagram.com/${props.accountname}`} className=\"rinsta-button__inc r__pt-10 r__pr-30 r__pb-10 r__pl-30\">Перейти в инстаграм?</a>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"rinsta-wrapper-buton\">\r\n            {goInstagram(props)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buttonInc;","import React from 'react';\r\nimport './Loader.scss';\r\nimport logoInst from './img/instagram-loader.svg';\r\n\r\nconst loader = () => <div className=\"rinsta-loader-box\"><img src= {logoInst} alt=\"loader\"/></div>\r\n\r\nexport default loader;","import React from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport './UI/MP/MP.scss';\n\nimport Header from './Header/Header';\nimport ListItem from './ListItem/ListItem';\nimport ButtonInc from './UI/ButtonInc';\nimport Loader from './UI/Loader/Loader';\nimport { addItem, dataApi } from './../actions/index';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n\n    const accountName = this.props.url;\n\n    fetch(`https://www.instagram.com/${accountName}/?__a=1`)\n      .then(res => (res.json()))\n      .then(res => (this.props.dataApi(res)))\n  }\n\n  render() {\n\n    const app = <div className=\"App\">\n      {/* user = данные аккаунтаб, accountname из точки приложения \"index.js\" для сслыки логотипа */}\n      <Header user={this.props.account.user} accountname={this.props.url} />\n      {/*  posts = посты из аккаунта,  increment = в экшене инкремент для количества отображаемых постов*/}\n      <ListItem posts={this.props.account.posts} increment={this.props.increment.count} />\n      {/* метод кнопки для инкремента */}\n      <ButtonInc addItem={this.props.addItem} increment={this.props.increment.count} accountname={this.props.url} />\n    </div>\n\n    const loader = <div className=\"App\">\n      <Loader />\n    </div>\n\n    return (\n      this.props.account.user.username ? app : loader\n    )\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ...state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addItem: (number) => {\n      dispatch(addItem(number));\n    },\n    dataApi: (data) => {\n      dispatch(dataApi(data));\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","\r\nexport const addItem = (count) => {\r\n    return {\r\n        type: 'ADD_ITEM',\r\n        count\r\n    }\r\n}\r\n\r\nexport const dataApi = (data) => {\r\n        \r\n    const user = {\r\n        profile_pic_url_hd: data.graphql.user.profile_pic_url_hd,\r\n        username: data.graphql.user.username,\r\n        external_url: data.graphql.user.external_url,\r\n        full_name: data.graphql.user.full_name,\r\n        biography: data.graphql.user.biography,\r\n        \r\n        // Колличество публикации\r\n        edge_owner_to_timeline_media: data.graphql.user.edge_owner_to_timeline_media.count,\r\n\r\n        // Подписчиков\r\n        edge_followed_by: data.graphql.user.edge_followed_by.count,\r\n\r\n        // подписок\r\n        edge_follow: data.graphql.user.edge_follow.count,  \r\n    };\r\n\r\n    const posts = {\r\n        // Публикации\r\n        edges: data.graphql.user.edge_owner_to_timeline_media.edges\r\n    };\r\n\r\n    return {\r\n        type: 'DATA_API',\r\n        user,\r\n        posts\r\n    }\r\n}\r\n","\r\nconst initState = {\r\n    count: 6\r\n}\r\n\r\nconst increment = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_ITEM\":\r\n\r\n            return {\r\n                ...state,\r\n                count: state.count < 12 ? state.count + action.count : state.count\r\n            }\r\n\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default increment;"," \r\nconst ininState = {\r\n    user: {},\r\n    posts: {},\r\n}\r\n\r\nconst account = (state = ininState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case 'DATA_API':\r\n        \r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                posts: action.posts \r\n            }\r\n    \r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n\r\n}\r\n\r\nexport default account;","import { combineReducers } from 'redux';\r\nimport increment from './increment';\r\nimport account from './account';\r\n\r\nconst combine = combineReducers({\r\n    increment,\r\n    account\r\n});\r\n\r\nexport default combine;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducers';\n\nconst logger = store => next => action => {\n    return next(action);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n\nconst app = (\n    <Provider store={store}>\n        <App \n            url={'bakery_lemoni'}\n        />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('rinsta'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}